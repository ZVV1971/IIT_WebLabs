@using DAL_ZVV.Entities
@using System.Text;

@model ZVV_Web_Lab_1.Models.PageListViewModel<LabGlassware>

@{ 
    var groupName = Request.RequestContext.RouteData.Values["group"];
    StringBuilder result = new StringBuilder();

    // стрелка влево     
    TagBuilder liPrevNext = new TagBuilder("li");
    liPrevNext.InnerHtml = Html.ActionLink("<<", "List",
                    new { group = groupName,
                        page = Model.CurrentPage - 1 })
        .ToString();
    if (Model.CurrentPage == 1)
    {
        liPrevNext.AddCssClass("disabled");
    }

    result.Append(liPrevNext.ToString());

    // пейджер     
    for (int i = 1; i <= Model.TotalPages; i++)
    {
        TagBuilder li = new TagBuilder("li");
        if (i==Model.CurrentPage)
        {
            li.AddCssClass("active");
        }
        TagBuilder a = new TagBuilder("a");
        a.MergeAttribute("href", Url.Action("List",
            new { group = groupName,
                page = i }));
        a.InnerHtml = i.ToString();
        li.InnerHtml = a.ToString();
        result.Append(li.ToString()); }

    // стрелка вправо     
    liPrevNext = new TagBuilder("li");
    liPrevNext.InnerHtml = Html.ActionLink(">>", "List", 
        new { group = groupName,
              page = Model.CurrentPage + 1 })
        .ToString();
    if (Model.CurrentPage == Model.TotalPages)
    {
        liPrevNext.AddCssClass("disabled");
    }

    result.Append(liPrevNext.ToString());
    }

<ul class="pagination">
    @MvcHtmlString.Create(result.ToString());
</ul>